#-----------------
# general options

set -g status-position top

set -g status-style bg=default
set -g status-left-length 90
set -g status-right-length 90
set -g status-justify centre
set -g focus-events on

set -g status-right "#H "

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:RGB"

set -g mouse on
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# split panes in current directory
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"

# wait for escape sequences - raise this to avoid bracketed paste issues
set -sg escape-time 400

set -g set-clipboard on

# display messages for 4 seconds
set-option -g display-time 4000

# start numbering windows and panes from 1
set -g base-index 1
set -g pane-base-index 1

# use vi keys in copy-mode
setw -g mode-keys vi

# enter copy-mode with prefix-y
bind-key y copy-mode

# start copying text with v (as well as the default Space)
bind-key -T copy-mode-vi v send-keys -X begin-selection

# copy text with y and C-c (as well as the default Enter)
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi C-c send-keys -X copy-selection-and-cancel

# swap windows (move tabs) with C-S-arrows
bind-key -n C-S-Left swap-window -t -1 \; select-window -t -1
bind-key -n C-S-Right swap-window -t +1 \; select-window -t +1

#------------------
# status bar setup

my_black="#1F2335"
my_blue="#7AA2F7"
my_gray="#888888"
my_darkslate="#2F4F4F"
my_white=color230

set -g status on
set -g status-justify left
set -g status-bg "#1f2335"
set -g status-fg default

set -g window-active-style default
set -g window-size latest
set -g window-style default
set -g window-status-style default
set -g window-status-current-style default
set -g window-status-last-style default
set -g window-status-activity-style reverse
set -g window-status-bell-style reverse
set -g window-status-separator ''
set -g status-left ''

set -g window-status-format "#[fg=$my_black,bg=default]█#[fg=$my_gray,bg=$my_black]#I#[fg=$my_gray,bg=$my_black] #[fg=$my_gray,bg=$my_black]#W#[fg=$my_black,bg=default]█"
set -g window-status-current-format "#[fg=$my_blue,bg=default]█#[fg=$my_black,bg=$my_blue]#I#[fg=$my_black,bg=$my_blue] #[fg=$my_black,bg=$my_blue]#W#[fg=$my_blue,bg=default]█"
set -g status-right "#[fg=$my_blue,bg=default]#[fg=$my_black,bg=$my_blue]   #(TZ='Europe/Bucharest' date +%%H:%%M)#[fg=$my_blue,bg=$my_blue] "

#------------------------------
# conditional coloring for vim

is_oldvim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|vim?x?)(diff)?$'"

cmd1="set -g status-bg \"$my_darkslate\" \;\
      set -g window-status-format \"#[fg=$my_darkslate,bg=default]██#[fg=$my_gray,bg=$my_darkslate]#I#[fg=$my_gray,bg=$my_darkslate,nobold] #[fg=$my_gray,bg=$my_darkslate]#W#[fg=$my_darkslate,bg=default]██\" \;\
      set -g window-status-current-format \"#[fg=$my_white,bg=default]██#[fg=$my_darkslate,bg=$my_white]#I#[fg=$my_darkslate,bg=$my_white] #[fg=$my_darkslate,bg=$my_white]#W#[fg=$my_white,bg=default]██\" \;\
      set -g status-right \"#[fg=$my_white,bg=default]█#[fg=$my_black,bg=$my_white]   #(TZ='Europe/Bucharest' date +%%H:%%M)#[fg=$my_white,bg=$my_white] \""

cmd2="set -g status-bg \"$my_black\" \;\
      set -g window-status-format \"#[fg=$my_black,bg=default]█#[fg=$my_gray,bg=$my_black]#I#[fg=$my_gray,bg=$my_black] #[fg=$my_gray,bg=$my_black]#W#[fg=$my_black,bg=default]█\" \;\
      set -g window-status-current-format \"#[fg=$my_blue,bg=default]█#[fg=$my_black,bg=$my_blue]#I#[fg=$my_black,bg=$my_blue] #[fg=$my_black,bg=$my_blue]#W#[fg=$my_blue,bg=default]█\" \;\
      set -g status-right \"#[fg=$my_blue,bg=default]#[fg=$my_black,bg=$my_blue]   #(TZ='Europe/Bucharest' date +%%H:%%M)#[fg=$my_blue,bg=$my_blue] \""

set-hook -g pane-focus-in { if-shell "$is_oldvim" "$cmd1" "$cmd2" }

#----------------------
# vim-tmux integration

# reimplementation of vim-tmux-navigator using C-w as a prefix for switching panes and vim windows

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -T vimtable"

bind-key -T vimtable C-h select-pane -L \; switch-client -T root
bind-key -T vimtable C-j select-pane -D \; switch-client -T root
bind-key -T vimtable C-k select-pane -U \; switch-client -T root
bind-key -T vimtable C-l select-pane -R \; switch-client -T root
bind-key -T vimtable h select-pane -L \; switch-client -T root
bind-key -T vimtable j select-pane -D \; switch-client -T root
bind-key -T vimtable k select-pane -U \; switch-client -T root
bind-key -T vimtable l select-pane -R \; switch-client -T root

#---------
# plugins

# extrakto requires fzf
set -g @plugin 'laktak/extrakto'
set -g @extrakto_clip_tool_run "tmux_osc52"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-processes 'nvim "nvim->nvim -c SesLoad"'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '15'

#-----
# tpm

run '~/.tmux/plugins/tpm/tpm'
